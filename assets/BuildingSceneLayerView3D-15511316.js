import{cY as O,cX as Q,am as A,cu as P,ai as n,aj as o,al as F,gy as G,gx as N,kO as B,ao as C,ag as _,bz as y,bw as f,dL as v,aK as b,dM as U,ar as E,dW as W,aF as x,aO as k,aG as V,aM as S,bn as j,kP as T,fw as z,cv as H,aW as D,aL as X}from"./index-080e108a.js";import"./BuildingGroupSublayer-d6113346.js";import{f as Y}from"./WhereClause-c86b9974.js";import"./BuildingComponentSublayer-5d49e5f9.js";import{d as K}from"./FeatureFilter-00f4be05.js";import{b as $}from"./Query-1c961d4c.js";import{x as J,c as Z,E as ee}from"./I3SMeshView3D-86f2c945.js";import{L as M,d as te,l as re,o as ie}from"./I3SQueryFeatureStore-0cfa6ebc.js";import{r as se,p as le,d as ne}from"./I3SUtil-2c288808.js";import{t as oe}from"./DefinitionExpressionSceneLayerView-66b62d34.js";import{t as ae,n as ue,p as I}from"./popupUtils-f04ec9a9.js";import{n as pe}from"./LayerView3D-ffd35809.js";import{d as de}from"./LayerView-448bc5ea.js";import"./executionError-c92d3b85.js";import"./UniqueValueRenderer-fef4204d.js";import"./diffUtils-590c9088.js";import"./jsonUtils-f73b3833.js";import"./DictionaryLoader-c0729336.js";import"./FieldsIndex-f79a8f26.js";import"./heatmapUtils-327ef4c5.js";import"./FeatureLayer-5c6d2c3b.js";import"./MultiOriginJSONSupport-e4912ffd.js";import"./sql-734ecbc5.js";import"./FeatureLayerBase-7c7dfccb.js";import"./commonProperties-30089b06.js";import"./featureLayerUtils-6cf06f83.js";import"./AttachmentQuery-972bbd60.js";import"./RelationshipQuery-39c07195.js";import"./serviceCapabilitiesUtils-959e798a.js";import"./editsZScale-1b5a53a6.js";import"./queryZScale-8f9616ff.js";import"./FeatureSet-111cb247.js";import"./APIKeyMixin-878a7aa7.js";import"./ArcGISService-83287338.js";import"./CustomParametersMixin-231c4be8.js";import"./EditBusLayer-d71787e9.js";import"./FeatureEffectLayer-4160946c.js";import"./FeatureEffect-86735d98.js";import"./FeatureReductionLayer-4262cf54.js";import"./LabelClass-2d53c485.js";import"./defaults-34554cbf.js";import"./defaultsJSON-59981e75.js";import"./OperationalLayer-0e8f8b28.js";import"./OrderedLayer-68067459.js";import"./PortalLayer-310c2800.js";import"./portalItemUtils-792a27e1.js";import"./TemporalLayer-f17c9161.js";import"./FeatureTemplate-2a7e96c1.js";import"./FeatureType-db96032c.js";import"./fieldProperties-62c55499.js";import"./labelingInfo-144f3d9f.js";import"./versionUtils-f17daa93.js";import"./styleUtils-25825fd6.js";import"./TopFeaturesQuery-e44d05be.js";import"./popupUtils-82ea8abb.js";import"./capabilities-5d185925.js";import"./I3SIndexInfo-445e6968.js";import"./I3SLayerDefinitions-ffdb3821.js";import"./I3SOverrides-96f73e2b.js";import"./I3SNode-2025159f.js";import"./I3SBinaryReader-2b8e30f7.js";import"./meshFeatureSet-8442b8e6.js";import"./FeatureLayerView3D-7e7e2653.js";import"./FeatureLayerViewBase3D-8474587e.js";import"./FeatureLikeLayerView3D-2e3185ce.js";import"./dehydratedFeatureComparison-a3375a3e.js";import"./queryForSymbologySnapping-0264f2b5.js";import"./elevationInfoUtils-4fd79d95.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-bb2a6162.js";import"./optimizedFeatureQueryEngineAdapter-58185a60.js";import"./centroid-8e8cfa47.js";import"./PooledRBush-3cae7682.js";import"./quickselect-e80674f5.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-19eda5ff.js";import"./normalizeUtils-cf8b8053.js";import"./normalizeUtilsCommon-500064b3.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-2fe9d339.js";import"./generateRendererUtils-1e52a587.js";import"./FeatureStore-f0e312fc.js";import"./BoundsStore-b6bd3c14.js";import"./projectExtentUtils-efa4cddd.js";import"./query-93c6e211.js";import"./pbfQueryUtils-26a87215.js";import"./pbf-d9aa3914.js";import"./EventedSet-d13fada5.js";import"./RefreshableLayerView-915e7f53.js";import"./SceneModification-2715f58a.js";import"./persistable-ca976a2c.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceExtension-91e7c3ce.js";import"./SceneLayerWorker-e92c2264.js";const R=(e,t)=>{let r=class extends O(Q(A(P.EventedMixin(e)))){constructor(i){super(i),this.sublayer=null,this.parent=null,this.view=null}initialize(){}get suspended(){return!this.canResume()}get updating(){return!this.suspended&&this.isUpdating()}get visible(){var i;return!!((i=this.sublayer)!=null&&i.visible)}set visible(i){this._overrideIfSome("visible",i)}get fullOpacity(){const i=s=>s??1;return i(this.get("sublayer.opacity"))*i(this.get("parent.fullOpacity"))}canResume(){var i,s;return!((i=this.parent)!=null&&i.suspended)&&((s=this.view)==null?void 0:s.ready)&&this.visible||!1}isUpdating(){return!1}};return n([o()],r.prototype,"sublayer",void 0),n([o()],r.prototype,"parent",void 0),n([o({readOnly:!0})],r.prototype,"suspended",null),n([o({type:Boolean,readOnly:!0})],r.prototype,"updating",null),n([o()],r.prototype,"view",void 0),n([o()],r.prototype,"visible",null),n([o()],r.prototype,"fullOpacity",null),r=n([F("esri.views.3d.layers.BuildingSublayerView3D")],r),r};var p;(function(e){e[e.Solid=0]="Solid",e[e.WireFrame=1]="WireFrame",e[e.XRay=2]="XRay"})(p||(p={}));const q=.15,he=.5*q;function ye(e){switch(e.filterMode.type){case"solid":return{mode:p.Solid};case"wire-frame":return{mode:p.WireFrame,edgeMaterial:G(e.filterMode.edges,{})};case"x-ray":return{mode:p.XRay}}}function L(e,t){if(t==null)return e.color[3]=0,e.edgeMaterial=null,void(e.pickable=!1);switch(t.mode){case p.Solid:return;case p.WireFrame:return e.color[3]=0,e.edgeMaterial=t.edgeMaterial,void(e.pickable=!1);case p.XRay:return e.color[0]=1,e.color[1]=1,e.color[2]=1,e.color[3]*=q,e.colorMixMode=N.Replace,e.castShadows=!1,e.pickable=!1,void(e.edgeMaterial=ce(e.edgeMaterial))}}function ce(e){return e==null?null:(m.lastMaterial!==e&&(m.cachedMaterial=me(e),m.lastMaterial=e),m.cachedMaterial)}function me(e){const t=B(e.color);return t[3]*=he,{...e,color:t}}const m={cachedMaterial:null,lastMaterial:null};class g extends C{constructor(){super(...arguments),this.sublayer=null}get updating(){return!1}get suspended(){return!1}get availableFields(){return[]}get filter(){return null}set filter(t){throw new Error("Not implemented")}queryFeatures(t,r){throw new Error("Not implemented")}queryObjectIds(t,r){throw new Error("Not implemented")}queryFeatureCount(t,r){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(t,r){throw new Error("Not implemented")}highlight(t){throw new Error("Not implemented")}}n([o()],g.prototype,"sublayer",void 0),n([o()],g.prototype,"availableFields",null),n([o()],g.prototype,"filter",null);let a=class extends oe(J(R(g))){constructor(){super(...arguments),this.type="building-component-sublayer-3d",this.layerView=null,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!1,this.requiredFields=[],this.progressiveLoadFactor=1,this._queryEngine=null}get i3slayer(){return this.sublayer}get layerUid(){return this.sublayer.layer.uid}get sublayerUid(){return this.sublayer.uid}get layerId(){return this.sublayer.layer.id}get sublayerId(){return this.sublayer.id}get layerPopupEnabledAndHasTemplate(){var e,t;return this.sublayer.popupEnabled&&ae(this.sublayer,(t=(e=this.layerView)==null?void 0:e.view.popup)==null?void 0:t.defaultPopupTemplateEnabled)}initialize(){this.updatingHandles.add(()=>[this.sublayer.renderer,this.definitionExpressionFields,this.filterExpressionFields],()=>this._updateRequiredFields()),this.updatingHandles.add(()=>this.sublayer.renderer,t=>this._rendererChange(t),_);const e=()=>this._filterChange();this.updatingHandles.add(()=>this.parsedDefinitionExpression,e),this.updatingHandles.add(()=>this._filter!=null?this._filter.sortedObjectIds:null,e),this.updatingHandles.add(()=>this._filter!=null?this._filter.parsedWhereClause:null,e),this.updatingHandles.add(()=>[this._filter!=null?this._filter.parsedGeometry:null,this.filter!=null?this.filter.spatialRelationship:null],()=>this._geometryFilterChange()),this.updatingHandles.add(()=>this.parsedFilterExpressions,()=>this._updateSymbologyOverride(),_),this.addResolvingPromise(this._updateRequiredFields())}get lodFactor(){return this.view.qualitySettings.sceneService.object.lodFactor}get parsedFilterExpressions(){return this.sublayer.modelName!=="Overview"&&this.layerView?this.layerView.filterExpressions.map(([e,t])=>{let r;try{r=Y.create(e,this.sublayer.fieldsIndex)}catch(l){return y.getLogger(this).error("Failed to parse filterExpression: "+l),null}if(!r.isStandardized)return y.getLogger(this).error("filterExpression is using non standard function"),null;const i=[],s=r.fieldNames;return se(s,this.sublayer.fields,{missingFields:i}),i.length>0?(y.getLogger(this).error(`filterExpression references unknown fields: ${i.join(", ")}`),null):[r,t]}).filter(e=>e!=null):[]}get filter(){return this._filter!=null?this._filter.viewFilter:null}set filter(e){e!=null&&M.checkSupport(e)?this._filter!=null?this._filter.viewFilter=e:this._filter=new M({viewFilter:e,layerFieldsIndex:this.sublayer.fieldsIndex,loadAsyncModule:t=>this._loadAsyncModule(t),addSqlFilter:(t,r)=>this.addSqlFilter(t,r,this.logError)}):this._filter=null}isUpdating(){return super.isUpdating()||this._filter!=null&&this._filter.updating}_updateSymbologyOverride(){const e=this.parsedFilterExpressions;e.length>0?this._setSymbologyOverride((t,r)=>{for(const[i,s]of e)try{if(i.testFeature(t))return L(r,s)}catch(l){this.logError(l)}return L(r,null)},this.filterExpressionFields):this._setSymbologyOverride(null,null)}get filterExpressionFields(){return f(this.sublayer.fieldsIndex,this.parsedFilterExpressions.reduce((e,[t])=>e.concat(t.fieldNames),new Array))}get availableFields(){const e=this.sublayer,t=e.fieldsIndex;let r=this.requiredFields;if(e.outFields||e.layer.outFields){const i=[...e.outFields||[],...e.layer.outFields||[]];r=[...v(t,i),...r]}return f(t,r)}_createLayerGraphic(e){const t=new b(null,null,e);return t.layer=this.sublayer.layer,t.sourceLayer=this.sublayer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}async fetchPopupFeatures(e,t){const r=this._validateFetchPopupFeatures(t);if(r)throw r;if(t==null||!t.clientGraphics||t.clientGraphics.length===0)return[];const i=[],s=[],l=this.sublayer.associatedLayer!=null?await this.sublayer.associatedLayer.load():this.sublayer,d=v(this.sublayer.fieldsIndex,await ue(l,I(this.sublayer,t))),c=new Set;for(const h of t.clientGraphics)U(d,h,c)?s.push(h):i.push(h);return s.length===0?i:(this.sublayer.associatedLayer!=null&&await this.sublayer.associatedLayer.load().catch(()=>y.getLogger(this).warn("Failed to load associated feature layer. Displaying popup attributes from cached attributes.")),this.whenGraphicAttributes(s,Array.from(c)).catch(()=>s).then(h=>i.concat(h)))}async _updateRequiredFields(){const e=f(this.sublayer.fieldsIndex,[...this.sublayer.renderer?await this.sublayer.renderer.getRequiredFields(this.sublayer.fieldsIndex):[],...this.definitionExpressionFields||[],...this.filterExpressionFields||[]]);this._set("requiredFields",e)}_validateFetchPopupFeatures(e){const{sublayer:t}=this,{popupEnabled:r}=t;return r?I(t,e)?void 0:new E("buildingscenelayerview3d:fetchPopupFeatures","Layer does not define a popup template",{sublayer:t}):new E("buildingscenelayerview3d:fetchPopupFeatures","Popups are disabled",{sublayer:t})}getFilters(){const e=super.getFilters();return this.addSqlFilter(e,this.parsedDefinitionExpression,this.logError),this._filter!=null&&this._filter.addFilters(e,this.view,this._controller.crsIndex,this._collection),e}createQuery(){const e={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(e):new $(e)}queryExtent(e,t){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatures(e,t){return this._ensureQueryEngine().executeQuery(this._ensureQuery(e),t==null?void 0:t.signal).then(r=>{if(!(r!=null&&r.features))return r;const i=this.sublayer,s=i.layer;for(const l of r.features)l.layer=s,l.sourceLayer=i;return r})}queryObjectIds(e,t){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQueryEngine(){return this._queryEngine==null&&(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const e=Z(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new te({layerView:this,priority:W.FEATURE_QUERY_ENGINE,spatialIndex:new re({featureAdapter:new ie({objectIdField:this.sublayer.objectIdField,attributeStorageInfo:this.sublayer.attributeStorageInfo,getFeatureExtent:e}),forAllFeatures:(t,r)=>this._forAllFeatures((i,s,l)=>t({id:i,index:s,meta:l}),r,ee.QUERYABLE),getFeatureExtent:e,sourceSpatialReference:le(this.sublayer),viewSpatialReference:this.view.spatialReference})})}_ensureQuery(e){return this._addDefinitionExpressionToQuery(e==null?this.createQuery():$.from(e))}};n([o()],a.prototype,"i3slayer",null),n([o()],a.prototype,"layerView",void 0),n([o()],a.prototype,"lodFactor",null),n([o({readOnly:!0})],a.prototype,"parsedFilterExpressions",null),n([o({type:K})],a.prototype,"filter",null),n([o()],a.prototype,"_filter",void 0),n([o({type:[String],readOnly:!0})],a.prototype,"filterExpressionFields",null),n([o({type:[String],readOnly:!0})],a.prototype,"requiredFields",void 0),n([o({type:[String],readOnly:!0})],a.prototype,"availableFields",null),a=n([F("esri.views.3d.layers.BuildingComponentSublayerView3D")],a);const ge=a;class w extends de{constructor(t){super(t),this.layer=null,this.sublayerViews=null}highlight(t){throw new Error("Not implemented")}}n([o()],w.prototype,"layer",void 0),n([o()],w.prototype,"sublayerViews",void 0);const fe=R(C);let u=class extends pe(w){constructor(e){super(e),this.type="building-scene-3d",this.sublayerViews=new x,this._abortController=new AbortController,this._loadingComponents=0,this._pendingWhenSublayerViews=new Map,this.ignoresMemoryFactor=!1}get filterExpression(){var i;const e=this.layer.activeFilterId,t=e!=null?this.layer.filters.find(s=>s.id===e):null,r=t!=null?(i=t.filterBlocks)==null?void 0:i.find(s=>s.filterMode.type==="solid"):null;return r?r.filterExpression:null}get filterExpressions(){const e=this.layer.activeFilterId,t=e!=null?this.layer.filters.find(r=>r.id===e):null;return t&&t.filterBlocks?t.filterBlocks.toArray().map(r=>[r.filterExpression??"",ye(r)]):[]}get updatingProgressValue(){const e=this.sublayerViews,t=this._loadingComponents+(e?e.length:0);return e.reduce((r,i)=>r+i.updatingProgress,0)/t}isUpdating(){return this._loadingComponents>0||this.sublayerViews&&this.sublayerViews.some(e=>e.updating)}initialize(){ne(this.layer.spatialReference,this.view.spatialReference,this.view.viewingMode),this._initializeSubLayerViews(this.layer.sublayers,this)}destroy(){this.sublayerViews&&(this.sublayerViews.forEach(e=>e.destroy()),this.sublayerViews=null),this._abortController=k(this._abortController)}_initializeSubLayerViews(e,t){const r=this,i=this.view;e.forEach(s=>{if(!s.isEmpty)if(s.type==="building-group"){const l=new fe({sublayer:s,view:i,parent:t});this._initializeSubLayerViews(s.sublayers,l)}else s.geometryType==="mesh"&&(this._loadingComponents++,s.load({signal:this._abortController.signal}).then(()=>{const l=new ge({sublayer:s,layerView:r,view:i,parent:t});this.sublayerViews.push(l);const d=this._pendingWhenSublayerViews.get(s);if(d){for(const c of d)c.resolve(l);this._pendingWhenSublayerViews.delete(s)}this.handles.add([V(()=>l.updating,()=>this.notifyChange("updating"),S),V(()=>l.updatingProgress,()=>this.notifyChange("updatingProgressValue"),S)])}).catch(l=>{j(l)||y.getLogger(this).error(`Error while creating view for sublayer ${s.id}
Layer: ${this.layer.url}
`,l)}).then(()=>{this._loadingComponents--,this.notifyChange("updating"),this.notifyChange("updatingProgressValue")}))})}getGraphicFromIntersectorTarget(e){for(const t of this.sublayerViews.items)if(t.sublayer.uid===e.sublayerUid)return t.getGraphicFromIntersectorTarget(e);return null}async fetchPopupFeatures(e,t){if(t==null||!t.clientGraphics||t.clientGraphics.length===0)return[];const r=T(t.clientGraphics,s=>s.sourceLayer),i=[];for(const[s,l]of r){const d=this._findComponent(s);d!=null&&i.push(d.fetchPopupFeatures(e,{...t,clientGraphics:l}))}return z(i).then(s=>s.flat())}whenGraphicBounds(e){const t=this._findComponent(e.sourceLayer);return t==null?Promise.reject():t.whenGraphicBounds(e)}getAABBFromIntersectorTarget(e){for(const t of this.sublayerViews.items)if(t.sublayer.uid===e.sublayerUid)return t.getAABBFromIntersectorTarget(e);return null}async whenSublayerView(e){const t=this._findComponent(e);if(t!=null)return t;const r=this._pendingWhenSublayerViews.get(e),i=H();return r?r.push(i):this._pendingWhenSublayerViews.set(e,[i]),i.promise}_findComponent(e){return this.sublayerViews.find(t=>e===t.sublayer)}highlight(e){e instanceof b?e=[e]:e instanceof x&&(e=e.toArray());const t=[];if(Array.isArray(e)&&e.length>0&&e[0]instanceof b){const r=e,i=new Map;for(const s of r){let l=i.get(s.sourceLayer);l==null&&(l=[],i.set(s.sourceLayer,l)),l.push(s)}this.sublayerViews.forEach(s=>{const l=i.get(s.sublayer);l&&t.push(s.highlight(l))})}return D(t)}get usedMemory(){return this.sublayerViews.reduce((e,t)=>e+t.usedMemory,0)}get unloadedMemory(){return this.sublayerViews.reduce((e,t)=>e+t.unloadedMemory,0)}};n([o()],u.prototype,"sublayerViews",void 0),n([o({readOnly:!0})],u.prototype,"filterExpression",null),n([o({readOnly:!0})],u.prototype,"filterExpressions",null),n([o(X)],u.prototype,"updatingProgress",void 0),n([o({readOnly:!0,dependsOn:[]})],u.prototype,"updatingProgressValue",null),u=n([F("esri.views.3d.layers.BuildingSceneLayerView3D")],u);const lr=u;export{lr as default};
