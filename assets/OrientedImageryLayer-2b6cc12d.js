import{ai as r,aj as t,al as s,ar as y}from"./index-080e108a.js";import n from"./FeatureLayer-5c6d2c3b.js";import"./UniqueValueRenderer-fef4204d.js";import"./diffUtils-590c9088.js";import"./jsonUtils-f73b3833.js";import"./DictionaryLoader-c0729336.js";import"./FieldsIndex-f79a8f26.js";import"./heatmapUtils-327ef4c5.js";import"./MultiOriginJSONSupport-e4912ffd.js";import"./sql-734ecbc5.js";import"./FeatureLayerBase-7c7dfccb.js";import"./commonProperties-30089b06.js";import"./featureLayerUtils-6cf06f83.js";import"./AttachmentQuery-972bbd60.js";import"./Query-1c961d4c.js";import"./RelationshipQuery-39c07195.js";import"./serviceCapabilitiesUtils-959e798a.js";import"./editsZScale-1b5a53a6.js";import"./queryZScale-8f9616ff.js";import"./FeatureSet-111cb247.js";import"./APIKeyMixin-878a7aa7.js";import"./ArcGISService-83287338.js";import"./CustomParametersMixin-231c4be8.js";import"./EditBusLayer-d71787e9.js";import"./FeatureEffectLayer-4160946c.js";import"./FeatureEffect-86735d98.js";import"./FeatureFilter-00f4be05.js";import"./FeatureReductionLayer-4262cf54.js";import"./LabelClass-2d53c485.js";import"./defaults-34554cbf.js";import"./defaultsJSON-59981e75.js";import"./OperationalLayer-0e8f8b28.js";import"./OrderedLayer-68067459.js";import"./PortalLayer-310c2800.js";import"./portalItemUtils-792a27e1.js";import"./TemporalLayer-f17c9161.js";import"./FeatureTemplate-2a7e96c1.js";import"./FeatureType-db96032c.js";import"./fieldProperties-62c55499.js";import"./labelingInfo-144f3d9f.js";import"./versionUtils-f17daa93.js";import"./styleUtils-25825fd6.js";import"./TopFeaturesQuery-e44d05be.js";import"./popupUtils-82ea8abb.js";function o(i){return(a,m,d)=>{if(!a)return null;const p=a[0].orientedImageryProperties;return(p==null?void 0:p[i])??null}}let e=class extends n{constructor(){super(...arguments),this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery"}get effectiveElevationSource(){var p;const{elevationSource:i,demPathPrefix:a,demPathSuffix:m}=this;if(!((p=i==null?void 0:i.url)!=null&&p.trim()))return i;let d=i.url.trim();return a!=null&&a.trim()&&(d=`${a.trim()}/${d}`),m!=null&&m.trim()&&(d+=`/${m.trim()}`),{...i,url:d}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new y("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeading")}}})],e.prototype,"cameraHeading",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeight")}}})],e.prototype,"cameraHeight",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraPitch")}}})],e.prototype,"cameraPitch",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraRoll")}}})],e.prototype,"cameraRoll",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("coveragePercent")}}})],e.prototype,"coveragePercent",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathPrefix")}}})],e.prototype,"demPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathSuffix")}}})],e.prototype,"demPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathPrefix")}}})],e.prototype,"depthImagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathSuffix")}}})],e.prototype,"depthImagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("farDistance")}}})],e.prototype,"farDistance",void 0),r([t({json:{write:!0}})],e.prototype,"geometryType",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("horizontalFieldOfView")}}})],e.prototype,"horizontalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("horizontalMeasurementUnit")}}})],e.prototype,"horizontalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathPrefix")}}})],e.prototype,"imagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathSuffix")}}})],e.prototype,"imagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("imageRotation")}}})],e.prototype,"imageRotation",void 0),r([t({type:Number,json:{write:!0,read:{source:"layers",reader:o("maximumDistance")}}})],e.prototype,"maximumDistance",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("nearDistance")}}})],e.prototype,"nearDistance",void 0),r([t({type:["OrientedImageryLayer"]})],e.prototype,"operationalLayerType",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("orientedImageryType")}}})],e.prototype,"orientedImageryType",void 0),r([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],e.prototype,"type",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalFieldOfView")}}})],e.prototype,"verticalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalMeasurementUnit")}}})],e.prototype,"verticalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathPrefix")}}})],e.prototype,"videoPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathSuffix")}}})],e.prototype,"videoPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("elevationSource")}}})],e.prototype,"elevationSource",void 0),r([t()],e.prototype,"effectiveElevationSource",null),e=r([s("esri.layers.OrientedImageryLayer")],e);const te=e;export{te as default};
