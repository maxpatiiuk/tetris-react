import{bz as x,aR as y,fn as E,ar as n,fo as L,fp as K,b5 as R,b9 as F,bW as D,fq as j}from"./index-080e108a.js";import{i as f}from"./originUtils-1469eeaf.js";import q from"./FeatureLayer-5c6d2c3b.js";import{r as z}from"./fetchService-82a8c4d0.js";import{o as w}from"./jsonContext-5f3816dc.js";import{i as c,a as M,u as I,l as m}from"./portalItemUtils-792a27e1.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./UniqueValueRenderer-fef4204d.js";import"./diffUtils-590c9088.js";import"./jsonUtils-f73b3833.js";import"./DictionaryLoader-c0729336.js";import"./FieldsIndex-f79a8f26.js";import"./heatmapUtils-327ef4c5.js";import"./MultiOriginJSONSupport-e4912ffd.js";import"./sql-734ecbc5.js";import"./FeatureLayerBase-7c7dfccb.js";import"./commonProperties-30089b06.js";import"./featureLayerUtils-6cf06f83.js";import"./AttachmentQuery-972bbd60.js";import"./Query-1c961d4c.js";import"./RelationshipQuery-39c07195.js";import"./serviceCapabilitiesUtils-959e798a.js";import"./editsZScale-1b5a53a6.js";import"./queryZScale-8f9616ff.js";import"./FeatureSet-111cb247.js";import"./APIKeyMixin-878a7aa7.js";import"./ArcGISService-83287338.js";import"./CustomParametersMixin-231c4be8.js";import"./EditBusLayer-d71787e9.js";import"./FeatureEffectLayer-4160946c.js";import"./FeatureEffect-86735d98.js";import"./FeatureFilter-00f4be05.js";import"./FeatureReductionLayer-4262cf54.js";import"./LabelClass-2d53c485.js";import"./defaults-34554cbf.js";import"./defaultsJSON-59981e75.js";import"./OperationalLayer-0e8f8b28.js";import"./OrderedLayer-68067459.js";import"./PortalLayer-310c2800.js";import"./TemporalLayer-f17c9161.js";import"./FeatureTemplate-2a7e96c1.js";import"./FeatureType-db96032c.js";import"./fieldProperties-62c55499.js";import"./labelingInfo-144f3d9f.js";import"./versionUtils-f17daa93.js";import"./styleUtils-25825fd6.js";import"./TopFeaturesQuery-e44d05be.js";import"./popupUtils-82ea8abb.js";const U=x.getLogger("esri.layers.FeatureLayer"),d="Feature Service";function u(a,t){return`Layer (title: ${a.title}, id: ${a.id}) of type '${a.declaredClass}' ${t}`}function g(a,t){if(t.type!==d)throw new n("feature-layer:portal-item-wrong-type",u(a,`should have portal item of type "${d}"`))}async function A(a){if(await a.load(),E(a))throw new n("feature-layer:save",u(a,"using an in-memory source cannot be saved to a portal item"))}function Y(a,t){let e=(a.messages??[]).filter(({type:r})=>r==="error").map(({name:r,message:s,details:o})=>new n(r,s,o));if(t!=null&&t.ignoreUnsupported&&(e=e.filter(({name:r})=>r!=="layer:unsupported"&&r!=="symbol:unsupported"&&r!=="symbol-layer:unsupported"&&r!=="property:unsupported"&&r!=="url:unsupported")),e.length>0)throw new n("feature-layer:save","Failed to save feature layer due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:e})}async function b(a,t,e){"beforeSave"in a&&typeof a.beforeSave=="function"&&await a.beforeSave();const r=a.write({},t);return Y(t,e),r}function J(a){const{layer:t,layerJSON:e}=a;return t.isTable?{layers:[],tables:[e]}:{layers:[e],tables:[]}}function v(a){c(a,m.JSAPI),a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter((t,e,r)=>r.indexOf(t)===e))}function _(a){const t=a.portalItem;if(!t)throw U.error("save: requires the portalItem property to be set"),new n("feature-layer:portal-item-not-set",u(a,"requires the portalItem property to be set"));if(!t.loaded)throw new n("feature-layer:portal-item-not-loaded",u(a,"cannot be saved to a portal item that does not exist or is inaccessible"));g(a,t)}async function N(a,t){return/\/\d+\/?$/.test(a.url??"")?J(t[0]):B(a,t)}async function B(a,t){const{layer:{url:e,customParameters:r,apiKey:s}}=t[0];let o=await a.fetchData("json");o&&o.layers!=null&&o.tables!=null||(o=await C(o,{url:e??"",customParameters:r,apiKey:s},t.map(i=>i.layer.layerId)));for(const i of t)O(i.layer,i.layerJSON,o);return o}async function C(a,t,e){a||(a={}),a.layers||(a.layers=[]),a.tables||(a.tables=[]);const{url:r,customParameters:s,apiKey:o}=t,{serviceJSON:i,layersJSON:l}=await z(r,{customParameters:s,apiKey:o}),p=S(a.layers,i.layers,e),h=S(a.tables,i.tables,e);a.layers=p.itemResources,a.tables=h.itemResources;const P=[...p.added,...h.added],T=l?[...l.layers,...l.tables]:[];return await k(a,P,r,T),a}function S(a,t,e){const r=L(a,t,(o,i)=>o.id===i.id);a=a.filter(o=>!r.removed.some(i=>i.id===o.id));const s=r.added.map(({id:o})=>({id:o}));return s.forEach(({id:o})=>{a.push({id:o})}),{itemResources:a,added:s.filter(({id:o})=>!e.includes(o))}}async function k(a,t,e,r){const s=t.map(({id:o})=>new q({url:e,layerId:o,sourceJSON:r.find(({id:i})=>i===o)}));await K(s.map(o=>o.load())),s.forEach(o=>{const{layerId:i,loaded:l,defaultPopupTemplate:p}=o;!l||p==null||O(o,{id:i,popupInfo:p.toJSON()},a)})}function O(a,t,e){a.isTable?$(e.tables,t):$(e.layers,t)}function $(a,t){if(!a)return;const e=a.findIndex(({id:r})=>r===t.id);e===-1?a.push(t):a[e]=t}function G(a){const{portalItem:t}=a;return j(a)&&!a.dynamicDataSource&&!!(t!=null&&t.loaded)&&t.type===d}async function W(a){if(!(a!=null&&a.length))throw new n("feature-layer-utils-saveall:missing-parameters","'layers' array should contain at least one feature layer");await Promise.all(a.map(r=>r.load()));for(const r of a)if(!G(r))throw new n("feature-layer-utils-saveall:invalid-parameters",`'layers' array should only contain layers or tables in a feature service loaded from 'Feature Service' item. ${u(r,"does not conform")}`,{layer:r});const t=a.map(r=>r.portalItem.id);if(new Set(t).size>1)throw new n("feature-layer-utils-saveall:invalid-parameters","All layers in the 'layers' array should be loaded from the same portal item");const e=a.map(r=>r.layerId);if(new Set(e).size!==e.length)throw new n("feature-layer-utils-saveall:invalid-parameters","'layers' array should contain only one instance each of layer or table in a feature service")}function H(a,t){let e=R.from(t);return e.id&&(e=e.clone(),e.id=null),e.type??(e.type=d),e.portal??(e.portal=F.getDefault()),g(a,e),e}async function Q(a,t){const{url:e,layerId:r,title:s,fullExtent:o,isTable:i}=a,l=D(e),p=l!=null&&l.serverType==="FeatureServer";t.url=p?e:`${e}/${r}`,t.title||(t.title=s),t.extent=null,i||o==null||(t.extent=await M(o)),I(t,m.METADATA),I(t,m.MULTI_LAYER),c(t,m.SINGLE_LAYER),i&&c(t,m.TABLE),v(t)}async function V(a,t,e){var s;const r=a.portal;await(r==null?void 0:r.signIn()),await((s=r==null?void 0:r.user)==null?void 0:s.addItem({item:a,data:t,folder:e==null?void 0:e.folder}))}const Wa=y(X);async function X(a,t){await A(a),_(a);const e=a.portalItem,r=w(e),s=await b(a,r,t),o=await N(e,[{layer:a,layerJSON:s}]);return v(e),await e.update({data:o}),f(r),e}const Ha=y(async(a,t)=>{await W(a);const e=a[0].portalItem,r=w(e),s=await Promise.all(a.map(i=>b(i,r,t))),o=await N(e,a.map((i,l)=>({layer:i,layerJSON:s[l]})));return v(e),await e.update({data:o}),await Promise.all(a.slice(1).map(i=>i.portalItem.reload())),f(r),e.clone()}),Qa=y(Z);async function Z(a,t,e){await A(a);const r=H(a,t),s=w(r),o=J({layer:a,layerJSON:await b(a,s,e)});return await Q(a,r),await V(r,o,e),a.portalItem=r,f(s),r}export{Wa as save,Ha as saveAll,Qa as saveAs};
