import{ai as t,aj as r,al as b,ck as T,eQ as P,eS as F,eR as k,bc as I,ar as d,as as D,hi as u,bz as _,aw as O,fy as y,aW as E,at as C,cq as N,hj as U,fR as A,ca as L,eZ as f,cC as G,ay as g,aA as J}from"./index-080e108a.js";import"./UniqueValueRenderer-fef4204d.js";import{o as M,p as V,n as z}from"./jsonUtils-f73b3833.js";import{O as W}from"./MultiOriginJSONSupport-e4912ffd.js";import{l as q}from"./ArcGISService-83287338.js";import{o as Q}from"./CustomParametersMixin-231c4be8.js";import{p as H}from"./FeatureEffectLayer-4160946c.js";import{n as K}from"./FeatureReductionLayer-4262cf54.js";import{c as X}from"./OperationalLayer-0e8f8b28.js";import{j as Z}from"./PortalLayer-310c2800.js";import{a as B}from"./TemporalLayer-f17c9161.js";import{m as Y,c as ee,D as te,I as ie,p as re,l as oe,f as se}from"./commonProperties-30089b06.js";import{v as ne}from"./featureLayerUtils-6cf06f83.js";import{s as ae}from"./fieldProperties-62c55499.js";import{C as pe}from"./LabelClass-2d53c485.js";import{i as le}from"./labelingInfo-144f3d9f.js";import{t as de}from"./styleUtils-25825fd6.js";import{b as me}from"./Query-1c961d4c.js";import{p as ce}from"./popupUtils-82ea8abb.js";import"./diffUtils-590c9088.js";import"./DictionaryLoader-c0729336.js";import"./FieldsIndex-f79a8f26.js";import"./heatmapUtils-327ef4c5.js";import"./FeatureEffect-86735d98.js";import"./FeatureFilter-00f4be05.js";import"./portalItemUtils-792a27e1.js";import"./sql-734ecbc5.js";import"./AttachmentQuery-972bbd60.js";import"./RelationshipQuery-39c07195.js";import"./defaults-34554cbf.js";import"./defaultsJSON-59981e75.js";var h;let p=h=class extends T{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new h({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};t([r({type:Number,json:{write:!0}})],p.prototype,"age",void 0),t([r({type:Number,json:{write:!0}})],p.prototype,"ageReceived",void 0),t([r({type:Number,json:{write:!0}})],p.prototype,"displayCount",void 0),t([r({type:Number,json:{write:!0}})],p.prototype,"maxObservations",void 0),p=h=t([b("esri.layers.support.PurgeOptions")],p);const S=p,v=ae();function w(e,o){return new d("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${o}`,{layer:e})}let i=class extends K(H(P(B(F(k(q(X(Z(W(Q(J))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new S,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=I.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null}normalizeCtorArgs(e,o){return typeof e=="string"?{url:e,...o}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new d("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const o=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(D).then(()=>this._fetchService(o))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const o=this._normalizeFeatureReduction(e);this._set("featureReduction",o)}set renderer(e){u(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,o,s){var n;o=o.layerDefinition||o;const a=(n=o.drawingInfo)==null?void 0:n.renderer;if(a){const l=M(a,o,s)||void 0;return l||_.getLogger(this).error("Failed to create renderer",{rendererDefinition:o.drawingInfo.renderer,layer:this,context:s}),l}return ne(o,s)}async connect(e){const[{createConnection:o}]=await Promise.all([O(()=>import("./createConnection-4b117798.js"),["assets/createConnection-4b117798.js","assets/index-080e108a.js","assets/index-a8e73b5e.css","assets/query-93c6e211.js","assets/normalizeUtils-cf8b8053.js","assets/normalizeUtilsCommon-500064b3.js","assets/pbfQueryUtils-26a87215.js","assets/pbf-d9aa3914.js","assets/queryZScale-8f9616ff.js","assets/Query-1c961d4c.js"]),this.load()]),s=this.geometryType?y.toJSON(this.geometryType):null,{customParameters:a=null,definitionExpression:n=null,geometryDefinition:l=null,maxReconnectionAttempts:x=0,maxReconnectionInterval:R=20,spatialReference:j=this.spatialReference}=e||this.createConnectionParameters(),m=o(this.parsedUrl,this.spatialReference,j,s,{geometry:l,where:n},x,R,a??void 0),$=E([this.on("send-message-to-socket",c=>m.sendMessageToSocket(c)),this.on("send-message-to-client",c=>m.sendMessageToClient(c))]);return m.once("destroy",$.remove),m}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return ce(this,e)}createQuery(){const e=new me;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,o){if(!this.fields)return null;let s=null;return this.fields.some(a=>(a.name===e&&(s=a.domain),!!s)),s}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}write(e,o){const s=o==null?void 0:o.messages;return this.webSocketUrl?(s==null||s.push(w(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,o):(s==null||s.push(w(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){var o,s,a;if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:n}=await C(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=n}}else{if(!((o=this.timeInfo)!=null&&o.trackIdField))throw new d("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const n=(s=this.fields.find(l=>l.type==="oid"))==null?void 0:s.name;if(!n)throw new d("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=n}if(!this.fields)throw new d("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some(n=>n.name===this.objectIdField)||this.fields.push(new N({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new d("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(a=this.portalItem)==null?void 0:a.portal,url:this.parsedUrl}),u(this.renderer,this.fieldsIndex),U(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField="__esri_stream_id__"),de(this,{origin:"service"})}};t([r({type:String})],i.prototype,"copyright",void 0),t([r({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),t([r({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),t([r({type:String})],i.prototype,"displayField",void 0),t([r({type:A})],i.prototype,"elevationInfo",void 0),t([r({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],i.prototype,"featureReduction",null),t([r(v.fields)],i.prototype,"fields",void 0),t([r(v.fieldsIndex)],i.prototype,"fieldsIndex",void 0),t([r({type:L,json:{name:"layerDefinition.definitionGeometry",write:!0}})],i.prototype,"geometryDefinition",void 0),t([r({type:y.apiValues,json:{read:{reader:y.read}}})],i.prototype,"geometryType",void 0),t([r(Y)],i.prototype,"labelsVisible",void 0),t([r({type:[pe],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:le},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],i.prototype,"labelingInfo",void 0),t([r(ee)],i.prototype,"legendEnabled",void 0),t([r({type:["show","hide"]})],i.prototype,"listMode",void 0),t([r({type:f})],i.prototype,"maxReconnectionAttempts",void 0),t([r({type:f})],i.prototype,"maxReconnectionInterval",void 0),t([r(te)],i.prototype,"maxScale",void 0),t([r(ie)],i.prototype,"minScale",void 0),t([r({type:String})],i.prototype,"objectIdField",void 0),t([r({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],i.prototype,"operationalLayerType",void 0),t([r(re)],i.prototype,"popupEnabled",void 0),t([r({type:G,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),t([r({type:S})],i.prototype,"purgeOptions",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"refreshInterval",void 0),t([r({types:V,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:z,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],i.prototype,"renderer",null),t([g("service","renderer",["drawingInfo.renderer","defaultSymbol"]),g("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],i.prototype,"readRenderer",null),t([r(oe)],i.prototype,"screenSizePerspectiveEnabled",void 0),t([r()],i.prototype,"sourceJSON",void 0),t([r({type:I,json:{origins:{service:{read:{source:"spatialReference"}}}}})],i.prototype,"spatialReference",void 0),t([r({json:{read:!1}})],i.prototype,"type",void 0),t([r(se)],i.prototype,"url",void 0),t([r({type:Number})],i.prototype,"updateInterval",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"useViewTime",void 0),t([r({type:String})],i.prototype,"webSocketUrl",void 0),i=t([b("esri.layers.StreamLayer")],i);const ze=i;export{ze as default};
