import{gD as j,bc as z,gE as C,gF as F,ax as v,gG as G,gH as $,gI as q,bA as E}from"./index-080e108a.js";import{u as O}from"./elevationInfoUtils-4fd79d95.js";async function P(o,d,p,l,r){const{elevationProvider:h,renderCoordsHelper:c,spatialReference:I}=o,{elevationInfo:y}=d,m=C(y,!0),b=await F(m,I,r);v(r);const i=[],u=new Set,f=new Set;for(const{objectId:e,points:t}of l){const n=p(e);if(n==null){for(const s of t)i.push(s.z??0);u.add(e);continue}n.isDraped&&f.add(e);const a=n.graphic.geometry;w.setFromElevationInfo(O(a,y)),w.updateFeatureExpressionInfoContext(b,n.graphic,d),g.spatialReference=o.spatialReference;for(const{x:s,y:x,z:D}of t)g.x=s,g.y=x,g.z=D??0,G(g,h,w,c,R),i.push(R.z)}return{elevations:i,drapedObjectIds:f,failedObjectIds:u}}const w=new $,g=j(0,0,0,z.WGS84),R=new q;async function B(o,d,p){if(o==null||d.candidates.length===0)return S;const l=o.graphics3DGraphicsByObjectID??o.graphics3DGraphics,r=[],h=[],{renderer:c}=o,I=c!=null&&"arcadeRequired"in c&&c.arcadeRequired?E():null,y=async(e,{graphic:t,graphics3DSymbol:n})=>{const a=await I,s=await o.getRenderingInfoAsync(t,c,a,{signal:p});return s==null?[]:n.queryForSnapping(e,b,s,p)},{candidates:m,spatialReference:b}=d;for(let e=0;e<m.length;++e){const t=m[e],{objectId:n}=t,a=typeof n=="number"?l==null?void 0:l.get(n):void 0;if(a==null)continue;const{graphics3DSymbol:s}=a;s.symbologySnappingSupported&&(r.push(y(t,a)),h.push(e))}if(r.length===0)return S;const i=await Promise.all(r);v(p);const u=[],f=[];for(let e=0;e<i.length;++e){const t=i[e],n=h[e];for(const a of t)u.push(a),f.push(n)}return{candidates:u,sourceCandidateIndices:f}}const S={candidates:[],sourceCandidateIndices:[]};export{P as f,B as r};
