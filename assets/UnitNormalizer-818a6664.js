import{e as Q}from"./Segment-50129b50.js";import{ar as x,cf as V,kv as g,kw as X,kx as Y,bc as tt,ky as et,dS as nt,gv as st,gu as at,kz as it,kA as rt,kB as G,cZ as D}from"./index-080e108a.js";const gt={readOnly:!0,get(){return Q(this.view)}};var F;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(F||(F={}));function O(t){if(!t)return null;if(X(t)&&t.wkid){const e=Y[t.wkid];if(e)return e}if(t.wkt){const e=ot(t.wkt);if(e)return e}return null}function ot(t){const e=et.exec(t);if(!e||e.length!==2)return null;const n=e[1].split(",");if(!n||n.length<3)return null;const s=parseFloat(n[1]),a=parseFloat(n[2]);return isNaN(s)||isNaN(a)?null:{a:s,f:a===0?0:1/a}}function ct(t){const e=O(t??tt.WGS84);if(ht(e))return e;const n=e.a*(1-e.f);return Object.assign(e,{b:n,eSq:1-(n/e.a)**2,radius:(2*e.a+n)/3,densificationRatio:1e4/((2*e.a+n)/3)})}function ht(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function lt(t){return O(t)!==null}function vt(t,e="meters"){if(!t)throw new x("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(s=>!lt(s.spatialReference)))throw new x("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const n=[];for(let s=0;s<t.length;s++){const a=t[s],{spatialReference:m}=a,v=a.type==="polyline"?a.paths:a.rings;let r=0;for(let z=0;z<v.length;z++){const o=v[z];let f=0;for(let M=1;M<o.length;M++){const _=o[M-1][0],w=o[M][0],k=o[M-1][1],h=o[M][1];if(k!==h||_!==w){const c=new ut;ft(c,[_,k],[w,h],m),f+=c.distance}}r+=f}r=V(r,"meters",e),n.push(r)}return n}class ut{constructor(e=0,n=void 0,s=void 0){this.distance=e,this.azimuth=n,this.reverseAzimuth=s}}function ft(t,e,n,s){const a=e[0]*g,m=e[1]*g,v=n[0]*g,r=n[1]*g,{a:z,b:o,f,radius:M}=ct(s),_=v-a,w=Math.atan((1-f)*Math.tan(m)),k=Math.atan((1-f)*Math.tan(r)),h=Math.sin(w),c=Math.cos(w),R=Math.sin(k),l=Math.cos(k);let S,$,d,i,A,y,N,P,U,b,q=1e3,u=_;do{if(N=Math.sin(u),P=Math.cos(u),d=Math.sqrt(l*N*(l*N)+(c*R-h*l*P)*(c*R-h*l*P)),d===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;A=h*R+c*l*P,y=Math.atan2(d,A),U=c*l*N/d,$=1-U*U,i=A-2*h*R/$,isNaN(i)&&(i=0),b=f/16*$*(4+f*(4-3*$)),S=u,u=_+(1-b)*f*U*(y+b*d*(i+b*A*(2*i*i-1)))}while(Math.abs(u-S)>1e-12&&--q>0);if(q===0){const W=M,Z=Math.acos(Math.sin(m)*Math.sin(r)+Math.cos(m)*Math.cos(r)*Math.cos(v-a))*W,j=v-a,J=Math.sin(j)*Math.cos(r),K=Math.cos(m)*Math.sin(r)-Math.sin(m)*Math.cos(r)*Math.cos(j),L=Math.atan2(J,K);return t.azimuth=L/g,t.distance=Z,t.reverseAzimuth=void 0,t}const p=$*(z*z-o*o)/(o*o),E=p/1024*(256+p*(p*(74-47*p)-128)),C=o*(1+p/16384*(4096+p*(p*(320-175*p)-768)))*(y-E*d*(i+E/4*(A*(2*i*i-1)-E/6*i*(4*d*d-3)*(4*i*i-3)))),H=Math.atan2(l*Math.sin(u),c*R-h*l*Math.cos(u)),I=Math.atan2(c*Math.sin(u),c*R*Math.cos(u)-h*l);return t.azimuth=H/g,t.distance=C,t.reverseAzimuth=I/g,t}function zt(t,e){if(nt(e,0,0,0),t.length>0){for(let n=0;n<t.length;++n)st(e,e,t[n]);at(e,e,1/t.length)}}function Rt(t,e,n,s){s.projectToRenderScreen(t,T),s.projectToRenderScreen(e,B),it(n,dt,Mt),rt(n,n)}const T=G(),Mt=T,B=G(),dt=B;class _t{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=D(this._spatialReference,1),this._metersPerElevationUnit=D(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{lt as M,ut as R,gt as a,ft as b,zt as c,F as e,Rt as f,_t as t,vt as y};
